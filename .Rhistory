dataset <- read.csv(filedir[i])
datas[i] <- mean(dataset[sulfate],na.rm=T)
}
for(i in length(id)) {
dataset <- read.csv(filedir[i])
datas[i] <- mean(dataset[[sulfate]],na.rm=T)
}
dataset <- read.csv(filedir[1:10])
dataset <- read.csv(filedir[1])
dataset <- read.csv(filedir[23])
dataset <- read.csv(filedir[10])
datas[1] <- mean(dataset[[pollutant]],na.rm=T)
dataset
names(dataset)
datas[1] <- mean(dataset[["sulfate"]],na.rm=T)
mean(datas)
pollutantmean <- function(directory, pollutant, id=1:322) {
id<-c(id)
datas<-rep(0,length(id))
filenames <- sprintf("%03d.csv", id)
filedir <- file.path(directory, filenames)
for(i in length(id)) {l
dataset <- read.csv(filedir[i])
datas[i] <- mean(dataset[[pollutant]],na.rm=T)
}
return(mean(datas))
}
pollutantmean(getwd(),"nitrate",23)
pollutantmean(getwd(),"nitrate",23)
pollutantmean <- function(directory, pollutant, id=1:322) {
id<-c(id)
datas<-rep(0,length(id))
filenames <- sprintf("%03d.csv", id)
filedir <- file.path(directory, filenames)
for(i in length(id)) {
dataset <- read.csv(filedir[i])
datas[i] <- mean(dataset[[pollutant]],na.rm=T)
}
return(mean(datas))
}
pollutantmean(getwd(),"nitrate",23)
pollutantmean(getwd(),"sulfate",1:10)
datas
pollutantmean <- function(directory, pollutant, id=1:322) {
id<-c(id)
datas<-rep(0,length(id))
filenames <- sprintf("%03d.csv", id)
filedir <- file.path(directory, filenames)
for(i in length(id)) {
dataset <- read.csv(filedir[i])
datas[i] <- mean(dataset[[pollutant]],na.rm=T)
}
datas
return(mean(datas))
}
pollutantmean(getwd(),"sulfate",1:10)
pollutantmean <- function(directory, pollutant, id=1:322) {
id<-c(id)
datas<-rep(0,length(id))
filenames <- sprintf("%03d.csv", id)
filedir <- file.path(directory, filenames)
for(i in length(id)) {
dataset <- read.csv(filedir[i])
datas[i] <- mean(dataset[[pollutant]],na.rm=T)
}
datas
return(mean(datas,na.rm=T))
}
pollutantmean(getwd(),"sulfate",1:10)
id <- 1:10
datas<-rep(0,length(id))
filenames <- sprintf("%03d.csv", id)
filedir <- file.path(getwd(), filenames)
for(i in length(id)) {
dataset <- read.csv(filedir[i])
datas[i] <- mean(dataset[[pollutant]],na.rm=T)
}
pollutant<-"sulfate"
for(i in length(id)) {
dataset <- read.csv(filedir[i])
datas[i] <- mean(dataset[[pollutant]],na.rm=T)
}
datas
pollutantmean <- function(directory, pollutant, id=1:322) {
id<-c(id)
datas<-rep(0,length(id))
filenames <- sprintf("%03d.csv", id)
filedir <- file.path(directory, filenames)
for(i in 1:length(id)) {
dataset <- read.csv(filedir[i])
datas[i] <- mean(dataset[[pollutant]],na.rm=T)
}
datas
return(mean(datas))
}
for(i in 1:length(id)) {
+         dataset <- read.csv(filedir[i])
+         datas[i] <- mean(dataset[[pollutant]],na.rm=T)
+     }
for(i in 1:length(id)) {
+         dataset <- read.csv(filedir[i])
+         datas[i] <- mean(dataset[[pollutant]],na.rm=T)  }
for(i in 1:length(id)) {
dataset <- read.csv(filedir[i])
datas[i] <- mean(dataset[[pollutant]],na.rm=T)
}
datas
mean(datas)
id<-23
datas<-rep(0,length(id))
filenames <- sprintf("%03d.csv", id)
filedir <- file.path(getwd(), filenames)
for(i in 1:length(id)) {
dataset <- read.csv(filedir[i])
datas[i] <- mean(dataset[[pollutant]],na.rm=T)
}
datas
for(i in 1:length(id)) {
dataset <- read.csv(filedir[i])
mean(dataset[[pollutant]],na.rm=T)
}
for(i in 1:length(id)) {
dataset <- read.csv(filedir[i])
datas[i] <- mean(dataset[[pollutant]],na.rm=T)
}
for(i in 1:length(id)) {
dataset <- read.csv(filedir[i])
datas[i] <- mean(dataset[[pollutant]],na.rm=T)
}
pollutant<-"nitrate"
for(i in 1:length(id)) {
dataset <- read.csv(filedir[i])
datas[i] <- mean(dataset[[pollutant]],na.rm=T)
}
datas
View(dataset)
pollutantmean <- function(directory, pollutant, id=1:322) {
id<-c(id)
datas<-rep(0,length(id))
filenames <- sprintf("%03d.csv", id)
filedir <- file.path(directory, filenames)
for(i in 1:length(id)) {
dataset <- read.csv(filedir[i])
datas[i] <- mean(dataset[[pollutant]],na.rm=T)
}
datas
return(mean(datas))
}
setwd("..")
pollutantmean("specdata/","nitrate",23)
pollutantmean("specdata/","sulfate",1:10)
pollutantmean("specdata/","sulfate"3)
pollutantmean("specdata/","sulfate",3)
pollutantmean("specdata/","nitrate",70:72)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
q
sd
checkPkgs <- function() {
1ws
sd
submit
submit
submit()
8uUrYQFfp2
submit()
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
library(pollutantmean)
library(pollutantmean.R)
source(pollutantmean.R)
source("pollutantmean.R")
pollutantmean("specdata/","sulfate",1:10)
pollutantmean <- function(directory, pollutant, id=1:332) {
id<-c(id)
id<-c(id)
id<-c(id)
g
fhdfh
byye()
pollutantmean("specdata/","sulfate",1:10)
source("pollutantmean.R")
pollutantmean("specdata/","sulfate",1:10)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("complete.R")
complete("specdata/",1)
submit()
submit()
submit()
4
submit()
submit()
submit()
submit()
submit()
submit()
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x
x <- 1:10
if(x > 5) {
x <- 0
}
x
x <- 1:10
if(x > 5) {
x <- 0
}
x <- 1:10
if(x > 5) {
x <- 0
print(x)}
x <- 1:10
if(x > 5) {
x <- 0
print(x) }
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
source("github.R")
install.packages("rjson")
library(rjson)
install.packages("rjson")
source("github.R")
source("github.R")
source("github.R")
source("github.R")
source("github.R")
con=url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode=readLines(con)
for (ind in c(10,20,30,100)){
print(nchar(htmlCode[ind]))
}
library(foreign)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
download.file(fileUrl, destfile = "wks.xpt", method = "curl")
dateDownloaded <- date()
wksData<-read.fwf("./wks.xpt",skip=4,widths=c(12, 7,4, 9,4, 9,4, 9,4))
sum(wksData[4])
install.packages(foreign)
install.packages("foreign")
install.packages("foreign")
library(foreign)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
download.file(fileUrl, destfile = "wks.xpt", method = "curl")
dateDownloaded <- date()
wksData<-read.fwf("./wks.xpt",skip=4,widths=c(12, 7,4, 9,4, 9,4, 9,4))
sum(wksData[4])
library(foreign)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
download.file(fileUrl, destfile = "wks.xpt", method = "curl")
library(foreign)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
download.file(fileUrl, destfile = "wks.xpt", method = "curl")library(foreign)
library(foreign)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
download.file(fileUrl, destfile = "wks.xpt", method = "curl")
download.file(fileUrl, destfile = "wks.xpt")
dateDownloaded <- date()
wksData<-read.fwf("./wks.xpt",skip=4,widths=c(12, 7,4, 9,4, 9,4, 9,4))
sum(wksData[4])
install.packages("httr")
library(httr)
library(rjson)
oauth_endpoints("github")
myapp <- oauth_app("github", "225166f0bae7c2858934")
oauth_endpoints("github")
myapp <- oauth_app("github", "4bae7317a5b0a44f0a13f4d3f7089c65666f4c9e")
oauth_endpoints("github")
myapp <- oauth_app("github", "05248c99bbcdf49e4e4e")
myapp <- oauth_app("github", "225166f0bae7c2858934")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/rate_limit", config(token = github_token))
oauth_endpoints("github")
myapp <- oauth_app("github", "225166f0bae7c2858934")
x <- 1:10
if(x > 5) {
x <- 0
}
hello
exit()
exit
ls
clear
clear()
cls
url3 = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
url4 = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url3, destfile = "./data/gdp.csv")
download.file(url4, destfile = "./data/education.csv")
gdp = read.csv("./data/gdp.csv",skip=1)
edu = read.csv("./data/education.csv")
labels(gdp)
labels(edu)
gdp
str(gdp[100,1])
str(edu)
table(gdp$X, gdp$Gross.domestic.product.2012)
str(edu$CountryCode)
attributes(edu$CountryCode)
y = levels(edu$CountryCode)
str(gdp$X)
attributes(gdp$X)
x = levels(gdp$X)
# how many codes match
table(gdp$X %in% edu$CountryCode)
library(plyr)
#rename columns
gdp$X.8 = NULL
gdp$X.7 = NULL
gdp$X.6 = NULL
gdp$X.2 = NULL
gdp = rename(gdp, c(X="CountryCode", "GDP"="Rank", X.3= "Description", X.4="GDP", X.5="Extra"))
str(gdp)
table(x %in% y)
# sort
gdp[with(gdp, order(GDP)), ]
x = gdp[1:193,]
y = subset(edu, CountryCode != " ")
x
str(x)
str(y)
table(y$CountryCode %in% x$CountryCode)
order.gdp <- order(gdp$GDP)
order.gdp
head(gdp$GDP[order.gdp])
gdp[gdp$Rank,]
labels(edu)
levels(edu$Income.Group)
x = with(edu, CountryCode[Income.Group == "High income: nonOECD"])
highIncOECD = with(edu, CountryCode[Income.Group == "High income: OECD"])
check = sapply(gdp$CountryCode, function(a) a %in% x)
check2 = sapply(gdp$CountryCode, function(a) a %in% highIncOECD)
check2
gdp$check = check
gdp$check2 = check2
y = with(gdp, Rank[check])
y = with(gdp, Rank[check2])
y
y = as.matrix(y)
y = as.numeric(y)
class(y[1:1])
#recode missing values
y[y==""] <- NA
str(y)
# exclude missing vals from analysis
mean(y, na.rm=TRUE)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl, destfile = "gdp.csv", method = "curl")
gdp <- read.csv("./gdp.csv")
fileUrl1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl1, destfile = "edu.csv", method = "curl")
edu <- read.csv("./edu.csv")
X=CountryCode
names(gdp)
names(edu)
head(gdp)
head(edu)
gdpclean<-gdp[5:194,]
mergedData=as.data.frame(merge(gdpclean,edu,by.x="X",by.y="CountryCode"))
mergedData$Gross.domestic.product.2012 = as.numeric(as.character(mergedData$Gross.domestic.product.2012))
summary(mergedData[mergedData$Income.Group=="High income: OECD",])
install.packages("jpeg")
library(jpeg)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileUrl, destfile = "jeff.jpg", method = "curl")
img.n<-readJPEG("jeff.jpg",TRUE)
quantile(img.n,probs=c(0.3,0.8))
install.packages("jpeg")
library(jpeg)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileUrl, destfile = "jeff.jpg")
img.n<-readJPEG("jeff.jpg",TRUE)
quantile(img.n,probs=c(0.3,0.8))
install.packages("jpeg")
install.packages("jpeg")
library(jpeg)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileUrl, destfile = "jeff.jpg")
img.n<-readJPEG("jeff.jpg",TRUE)
quantile(img.n,probs=c(0.3,0.8))
install.packages("jpeg")
install.packages("jpeg")
library(jpeg)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileUrl, destfile = "jeff.jpg")
img.n<-readJPEG("jeff.jpg",TRUE)
quantile(img.n,probs=c(0.3,0.8))
install.packages("jpeg")
library(jpeg)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileUrl, destfile = "jeff.jpg")
img.n<-readJPEG("jeff.jpg",TRUE)
quantile(img.n,probs=c(0.3,0.8))
install.packages("jpeg")
install.packages("jpeg")
install.packages("jpeg")
install.packages("jpeg")
library(jpeg)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileUrl, destfile = "jeff.jpg")
img.n<-readJPEG("jeff.jpg",TRUE)
quantile(img.n,probs=c(0.3,0.8))
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl, destfile = "gdp.csv", method = "curl")
gdp <- read.csv("./gdp.csv")
fileUrl1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl1, destfile = "edu.csv", method = "curl")
edu <- read.csv("./edu.csv")
X=CountryCode
names(gdp)
names(edu)
head(gdp)
head(edu)
gdpclean<-gdp[5:194,]
mergedData=as.data.frame(merge(gdpclean,edu,by.x="X",by.y="CountryCode"))
mergedData$Gross.domestic.product.2012 = as.numeric(as.character(mergedData$Gross.domestic.product.2012))
summary(mergedData[mergedData$Income.Group=="High income: OECD",])
quantile(mergedData$Gross.domestic.product.2012,probs=c(0.2,0.4,0.6,0.8,1))
library(Hmisc)
mergedData$gdp=cut2(mergedData$Gross.domestic.product.2012,g=5)
table(mergedData$Income.Group,mergedData$gdp)
install.packages("Hmisc")
quantile(mergedData$Gross.domestic.product.2012,probs=c(0.2,0.4,0.6,0.8,1))
library(Hmisc)
mergedData$gdp=cut2(mergedData$Gross.domestic.product.2012,g=5)
table(mergedData$Income.Group,mergedData$gdp)
install.packages("jpeg")
library(jpeg)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileUrl, destfile = "jeff.jpg", method = "curl")
img.n<-readJPEG("jeff.jpg",TRUE)
quantile(img.n,probs=c(0.3,0.8))
install.packages("jpeg")
library(jpeg)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileUrl, destfile = "jeff.jpg", method = "curl")
img.n<-readJPEG("jeff.jpg",TRUE)
quantile(img.n,probs=c(0.3,0.8))
install.packages("jpeg")
install.packages("jpeg")
library(jpeg)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileUrl, destfile = "jeff.jpg", method = "curl")
img.n<-readJPEG("jeff.jpg",TRUE)
quantile(img.n,probs=c(0.3,0.8))
install.packages("jpeg")
library(jpeg)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileUrl, destfile = "jeff.jpg", method = "curl")
img.n<-readJPEG("jeff.jpg",TRUE)
quantile(img.n,probs=c(0.3,0.8))
install.packages("jpeg")
library(jpeg)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileUrl, destfile = "jeff.jpg")
img.n<-readJPEG("jeff.jpg",TRUE)
quantile(img.n,probs=c(0.3,0.8))
install.packages("jpeg")
install.packages("jpeg")
library(jpeg)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileUrl, destfile = "jeff.jpg")
img.n<-readJPEG("jeff.jpg",TRUE)
quantile(img.n,probs=c(0.3,0.8))
library(jpeg)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileUrl, destfile = "jeff.jpg")
img.n<-readJPEG("jeff.jpg",TRUE)
quantile(img.n,probs=c(0.3,0.8))
library(jpeg)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileUrl, destfile = "jeff.jpg")
img.n<-readJPEG("jeff.jpg")
quantile(img.n,probs=c(0.3,0.8))
library(jpeg)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileUrl, destfile = "jeff.jpg")
img.n<-readJPEG("jeff.jpg",TRUE)
quantile(img.n,probs=c(0.3,0.8))
source("submitscript3.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
